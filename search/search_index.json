{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"confdaora Configurations using python annotations Documentation : https://dutradda.github.io/confdaora/ Source Code : https://github.com/dutradda/confdaora Key Features Generate a DictDaora with values parsed from environment variables. Requirements Python 3.8+ dictdaora jsondaora Instalation $ pip install confdaora Basic example from typing import TypedDict from confdaora import confdaora_env class AppConfig ( TypedDict ): port : int host : str config = confdaora_env ( AppConfig ) print ( config ) Suposing your file calls myconf.py : PORT=8080 HOST=localhost python myconf.py {'port': 8080, 'host': 'localhost'} Complex example from dataclasses import dataclass from typing import List from confdaora import confdaora_env @dataclass class DBConfig : __prefix__ = 'db' host : str port : int = 3306 @dataclass class KeyConfig : __prefix__ = 'keys' name : str values : List [ int ] @dataclass class AppConfig : db : DBConfig keys : List [ KeyConfig ] host : str port : int = 8080 config = confdaora_env ( AppConfig ) print ( config ) Suposing your file calls myconf.py : HOST=localhost \\ DB_HOST=localhost \\ KEYS_0_NAME=test \\ KEYS_0_VALUES=10,20 \\ KEYS_1_NAME=test2 \\ KEYS_1_VALUES=30,40 \\ python myconf.py {'db': {'host': 'localhost', 'port': 3306}, 'keys': [{'name': 'test', 'values': [10, 20]}, {'name': 'test2', 'values': [30, 40]}], 'host': 'localhost', 'port': 8080}","title":"confdaora"},{"location":"#confdaora","text":"Configurations using python annotations Documentation : https://dutradda.github.io/confdaora/ Source Code : https://github.com/dutradda/confdaora","title":"confdaora"},{"location":"#key-features","text":"Generate a DictDaora with values parsed from environment variables.","title":"Key Features"},{"location":"#requirements","text":"Python 3.8+ dictdaora jsondaora","title":"Requirements"},{"location":"#instalation","text":"$ pip install confdaora","title":"Instalation"},{"location":"#basic-example","text":"from typing import TypedDict from confdaora import confdaora_env class AppConfig ( TypedDict ): port : int host : str config = confdaora_env ( AppConfig ) print ( config ) Suposing your file calls myconf.py : PORT=8080 HOST=localhost python myconf.py {'port': 8080, 'host': 'localhost'}","title":"Basic example"},{"location":"#complex-example","text":"from dataclasses import dataclass from typing import List from confdaora import confdaora_env @dataclass class DBConfig : __prefix__ = 'db' host : str port : int = 3306 @dataclass class KeyConfig : __prefix__ = 'keys' name : str values : List [ int ] @dataclass class AppConfig : db : DBConfig keys : List [ KeyConfig ] host : str port : int = 8080 config = confdaora_env ( AppConfig ) print ( config ) Suposing your file calls myconf.py : HOST=localhost \\ DB_HOST=localhost \\ KEYS_0_NAME=test \\ KEYS_0_VALUES=10,20 \\ KEYS_1_NAME=test2 \\ KEYS_1_VALUES=30,40 \\ python myconf.py {'db': {'host': 'localhost', 'port': 3306}, 'keys': [{'name': 'test', 'values': [10, 20]}, {'name': 'test2', 'values': [30, 40]}], 'host': 'localhost', 'port': 8080}","title":"Complex example"},{"location":"changelog/","text":"CHANGELOG 0.1.4 - 2020-02-15 Update docs 0.1.3 - 2020-02-15 Improve docs 0.1.2 - 2020-02-15 Fix docs 0.1.1 - 2020-02-15 Update docs 0.1.0 - 2020-02-15 Create from_dict function Create confdaora decorator","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"CHANGELOG"},{"location":"changelog/#014-2020-02-15","text":"Update docs","title":"0.1.4 - 2020-02-15"},{"location":"changelog/#013-2020-02-15","text":"Improve docs","title":"0.1.3 - 2020-02-15"},{"location":"changelog/#012-2020-02-15","text":"Fix docs","title":"0.1.2 - 2020-02-15"},{"location":"changelog/#011-2020-02-15","text":"Update docs","title":"0.1.1 - 2020-02-15"},{"location":"changelog/#010-2020-02-15","text":"Create from_dict function Create confdaora decorator","title":"0.1.0 - 2020-02-15"},{"location":"contributing/","text":"Starting Development git clone git@github.com:dutradda/confdaora.git --recursive cd confdaora make setup-python-virtualenv source venv/bin/activate make setup-python-project bake dependencies Running the integration suite: bake integration Other bake tasks: bake check-code bake tests-code bake tests-docs bake serve-docs bake add-changelog m = \"Add my cool feature\" You can run bake to see all tasks available.","title":"Development - Contributing"},{"location":"contributing/#starting-development","text":"git clone git@github.com:dutradda/confdaora.git --recursive cd confdaora make setup-python-virtualenv source venv/bin/activate make setup-python-project bake dependencies","title":"Starting Development"},{"location":"contributing/#running-the-integration-suite","text":"bake integration","title":"Running the integration suite:"},{"location":"contributing/#other-bake-tasks","text":"bake check-code bake tests-code bake tests-docs bake serve-docs bake add-changelog m = \"Add my cool feature\" You can run bake to see all tasks available.","title":"Other bake tasks:"}]}